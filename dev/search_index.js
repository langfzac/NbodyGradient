var documenterSearchIndex = {"docs":
[{"location":"api/#API","page":"API","title":"API","text":"","category":"section"},{"location":"api/#Types","page":"API","title":"Types","text":"","category":"section"},{"location":"api/#Initial-Conditions","page":"API","title":"Initial Conditions","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"Elements\nElements(m::T,P::T,t0::T,ecosϖ::T,esinϖ::T,I::T,Ω::T) where T<:Real\nElementsIC\nElementsIC(t0::T,H::Union{Int64,Vector{Int64}},elems::Elements{T}...) where T <: AbstractFloat","category":"page"},{"location":"api/#NbodyGradient.Elements","page":"API","title":"NbodyGradient.Elements","text":"Elements{T<:AbstractFloat} <: AbstractInitialConditions\n\nOrbital elements of a binary, and mass of a 'outer' body. See Examples for units and conventions.\n\nFields\n\nm::T : Mass of outer body.\nP::T : Period [Days].\nt0::T : Initial time of transit [Days].\necosϖ : Eccentricity vector x-component (eccentricity times cosine of the longitude of periastron)\nesinϖ : Eccentricity vector y-component (eccentricity times sine of the longitude of periastron)\nI::T : Inclination, as measured from sky-plane [Radians].\nΩ::T : Longitude of ascending node, as measured from +x-axis [Radians].\na::T : Orbital semi-major axis [AU].\ne::T : Eccentricity.\nϖ::T : Longitude of periastron [Radians].\n\n\n\n\n\n","category":"type"},{"location":"api/#NbodyGradient.Elements-Union{Tuple{T}, NTuple{7,T}} where T<:Real","page":"API","title":"NbodyGradient.Elements","text":"Elements(m,P,t0,ecosϖ,esinϖ,I,Ω)\n\nMain Elements constructor. May use keyword arguments, see Examples.\n\n\n\n\n\n","category":"method"},{"location":"api/#NbodyGradient.ElementsIC","page":"API","title":"NbodyGradient.ElementsIC","text":"ElementsIC{T<:AbstractFloat} <: InitialConditions{T}\n\nInitial conditions, specified by a hierarchy vector and orbital elements.\n\nFields\n\nelements::Matrix{T} : Masses and orbital elements.\nH::Vector{Int64} : Hierarchy vector.\nϵ::Matrix{T} : Matrix of Jacobi coordinates\namat::Matrix{T} : A matrix from Hamers and Portegies Zwart 2016.\nnbody::Int64 : Number of bodies.\nm::Vector{T} : Masses of bodies.\nt0::T : Initial time [Days].\n\n\n\n\n\n","category":"type"},{"location":"api/#NbodyGradient.ElementsIC-Union{Tuple{T}, Tuple{T,Union{Int64, Array{Int64,1}},Vararg{Elements{T},N} where N}} where T<:AbstractFloat","page":"API","title":"NbodyGradient.ElementsIC","text":"ElementsIC(t0,H,elems...)\n\nCollects Elements and produces an ElementsIC struct.\n\nArguments\n\nt0::T : Initial time [Days].\nH::Union{Int64,Vector{Int64}} : Hierarchy specification. See below and Examples\nelems::Elements{T}... : A sequence of Elements{T}. Elements should be passed in the order they appear in the hierarchy (left to right).\n\nHierarchy\n\nH::Int64: The system will be given by a 'fully-nested' Keplerian.\n\nH = 4\n\n3        ____|____\n        |         |\n2    ___|___      d\n    |       |\n1 __|__     c\n |     |\n a     b\n\nH::Vector{Int64}: The first elements is the number of bodies. Each subsequent is the number of binaries on a level of the hierarchy.\n\nH = [4,2,1]. Two binaries on level 1, one on level 2.\n\n2    ____|____\n    |         |\n1 __|__     __|__\n |     |   |     |\n a     b   c     d\n\n\n\n\n\n","category":"method"},{"location":"api/#State","page":"API","title":"State","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"State{T<:AbstractFloat}\nState(ic::InitialConditions{T}) where T<:AbstractFloat","category":"page"},{"location":"api/#NbodyGradient.State","page":"API","title":"NbodyGradient.State","text":"State{T<:AbstractFloat} <: AbstractState\n\nCurrent state of simulation.\n\nFields (relevant to the user)\n\nx::Matrix{T} : Positions of each body [dimension, body].\nv::Matrix{T} : Velocities of each body [dimension, body].\nt::Vector{T} : Current time of simulation.\nm::Vector{T} : Masses of each body.\njac_step::Matrix{T} : Current Jacobian.\ndqdt::Vector{T} : Derivative with respect to time.\n\n\n\n\n\n","category":"type"},{"location":"api/#NbodyGradient.State-Union{Tuple{InitialConditions{T}}, Tuple{T}} where T<:AbstractFloat","page":"API","title":"NbodyGradient.State","text":"State(ic)\n\nConstructor for State type.\n\nArguments\n\nic::InitialConditions{T} : Initial conditions for the system.\n\n\n\n\n\n","category":"method"},{"location":"api/#Integrator","page":"API","title":"Integrator","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"Integrator{T<:AbstractFloat}","category":"page"},{"location":"api/#NbodyGradient.Integrator","page":"API","title":"NbodyGradient.Integrator","text":"Integrator{T<:AbstractFloat}\n\nIntegrator. Used as a functor to integrate a State.\n\nFields\n\nscheme::Function : The integration scheme to use.\nh::T : Step size.\nt0::T : Initial time.\ntmax::T : Final time.\n\n\n\n\n\n","category":"type"},{"location":"examples/#Examples","page":"Examples","title":"Examples","text":"","category":"section"},{"location":"examples/#Basic-Usage","page":"Examples","title":"Basic Usage","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"Here we'll walk through a simple example of integrating a 3-body system.","category":"page"},{"location":"examples/#Units","page":"Examples","title":"Units","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"A quick note on the units used throughout the code.","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"Distance: AU\nTime: Days\nMass: Solar Masses\nAngles: Radians","category":"page"},{"location":"examples/#Initial-Conditions","page":"Examples","title":"Initial Conditions","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"First, we define the orbital elements of the system. This can be done by creating Elements for each body in the system.","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"Start with a 1 solar mass","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"using NbodyGradient # hide\na = Elements(m = 1.0);\nnothing # hide","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"We then define the orbital elements for first body, say an Earth analogue.","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"b = Elements(\n    m = 3e-6,\n    P = 365.256,\n    ecosϖ = 0.01\n);\nnothing # hide","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"The unspecified orbital elements default to zeros. (ecosϖ can be typed as ecos\\varpi and then hitting tab)","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"Next we'll create a Jupiter analogue for the final body. Here the orbital elements are specified for the Keplerian ((a,b),c), or c orbiting the center of mass of a and b. (While this might not need to be stated explicitly here, this convention is useful for more complicated hierarchical systems).","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"c = Elements(\n    m = 9.54e-4,\n    P = 4332.59,\n    ecosϖ = 0.05\n);\nnothing # hide","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"Now we need to pass our Elements to ElementsIC.","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"t0 = 0.0 # Initial time\nN = 3    # Number of bodies\nic = ElementsIC(t0,N,a,b,c)","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"Finally, we can pass the initial conditions to State, which converts orbital elements to cartesian coordinates (and calculates the derivatives with respect to the initial conditions).","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"s = State(ic);\nnothing # hide","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"The positions and velocities can be accessed by s.x and s.v, respectively. Each matrix contains the vector component (rows) for a particular body (columns).","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"s.x","category":"page"},{"location":"examples/#Integration","page":"Examples","title":"Integration","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"Now that we have initial conditions, we can construct and run the integrator. First, define an Integrator, specifying the integration scheme, the time step, initial time, and final time. We'll use the ah18! mapping.","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"h = b.P/30.0 # We want at most 1/20th of the smallest period for a time step\nt0 = 0.0\ntmax = 5*c.P # Integrate for 5 orbital periods of the outer body\nintr = Integrator(ah18!,h,t0,tmax);\nnothing # hide","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"Finally, run the Integrator by passing it the State.","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"intr(s)\ns.x # Show final positions","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"This integrates from t0 to tmax, steping by h. If you'd rather step a certain number of time steps:","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"N = 1000\nintr(s,N)","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"Note: If you want to run the integration from the initial condtions again, you must 'reset' the State. I.e. run s = State(ic). Otherwise, the integration will begin from what ever s.t is currently equal to, and with those coordinates.","category":"page"},{"location":"examples/#Transit-Timing","page":"Examples","title":"Transit Timing","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"TBD. For a transit timing example notebook, see examples on GitHub: NbodyGradient.","category":"page"},{"location":"#NbodyGradient","page":"NbodyGradient","title":"NbodyGradient","text":"","category":"section"},{"location":"","page":"NbodyGradient","title":"NbodyGradient","text":"A differentiable N-body integrator for modeling transiting exoplanets, and more.","category":"page"},{"location":"#Getting-Started","page":"NbodyGradient","title":"Getting Started","text":"","category":"section"},{"location":"","page":"NbodyGradient","title":"NbodyGradient","text":"The code is currently under developement, but the main branch is kept stable. The best way to use the code is to run the following in the REPL","category":"page"},{"location":"","page":"NbodyGradient","title":"NbodyGradient","text":"]add https://github.com/ericagol/NbodyGradient","category":"page"},{"location":"","page":"NbodyGradient","title":"NbodyGradient","text":"Then use like any other Julia package","category":"page"},{"location":"","page":"NbodyGradient","title":"NbodyGradient","text":"using NbodyGradient","category":"page"},{"location":"","page":"NbodyGradient","title":"NbodyGradient","text":"See the Examples page for basic usage.","category":"page"},{"location":"#Index","page":"NbodyGradient","title":"Index","text":"","category":"section"},{"location":"","page":"NbodyGradient","title":"NbodyGradient","text":"","category":"page"}]
}
